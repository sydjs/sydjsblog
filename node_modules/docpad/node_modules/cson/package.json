{
  "name": "cson",
  "version": "1.4.4",
  "description": "CoffeeScript-Object-Notation Parser. Same as JSON but for CoffeeScript objects",
  "homepage": "https://github.com/bevry/cson",
  "keywords": [
    "javascript",
    "coffeescript",
    "json",
    "cson",
    "parse",
    "stringify"
  ],
  "author": {
    "name": "Bevry Pty Ltd",
    "email": "us@bevry.me",
    "url": "http://bevry.me"
  },
  "maintainers": [
    {
      "name": "Benjamin Lupton",
      "email": "b@lupton.cc",
      "url": "https://github.com/balupton"
    }
  ],
  "contributors": [
    {
      "name": "Benjamin Lupton",
      "email": "b@lupton.cc",
      "url": "https://github.com/balupton"
    },
    {
      "name": "Ryan LeFevre",
      "email": "meltingice8917@gmail.com",
      "url": "https://github.com/meltingice"
    },
    {
      "name": "Linus G Thiel",
      "email": "linus@hanssonlarsson.se",
      "url": "https://github.com/linus"
    },
    {
      "name": "Zhang Cheng",
      "email": "czhang.oss@gmail.com",
      "url": "https://github.com/zhangcheng"
    },
    {
      "name": "Nicolae Claudius",
      "email": "claudius.nicolae@gmail.com",
      "url": "https://github.com/clyfe"
    },
    {
      "name": "Joel Perras",
      "email": "joel.perras@gmail.com",
      "url": "https://github.com/jperras"
    }
  ],
  "bugs": {
    "url": "https://github.com/bevry/cson/issues"
  },
  "repository": {
    "type": "git",
    "url": "http://github.com/bevry/cson.git"
  },
  "engines": {
    "node": ">=0.8.0"
  },
  "dependencies": {
    "coffee-script": "~1.6.3",
    "js2coffee": "~0.1.4",
    "extract-opts": "~2.2.0",
    "requirefresh": "~1.1.2"
  },
  "devDependencies": {
    "chai": "~1.7.2",
    "joe": "~1.3.0",
    "joe-reporter-console": "~1.2.1"
  },
  "directories": {
    "lib": "./out/lib"
  },
  "scripts": {
    "test": "node ./out/test/everything.test.js"
  },
  "bin": {
    "cson2json": "./bin/cson2json",
    "json2cson": "./bin/json2cson"
  },
  "main": "./out/lib/cson",
  "readme": "# CSON\n\n[![Check this project's build status on TravisCI](https://secure.travis-ci.org/bevry/cson.png?branch=master)](http://travis-ci.org/bevry/cson)\n[![View this project's NPM page](https://badge.fury.io/js/cson.png)](https://npmjs.org/package/cson)\n[![Donate monthly to this project via Flattr](https://raw.github.com/balupton/flattr-buttons/master/badge-89x18.gif)](http://flattr.com/thing/344188/balupton-on-Flattr)\n[![Donate once-off to this project via Paypal](https://www.paypalobjects.com/en_AU/i/btn/btn_donate_SM.gif)](https://www.paypal.com/au/cgi-bin/webscr?cmd=_flow&SESSION=IHj3DG3oy_N9A9ZDIUnPksOi59v0i-EWDTunfmDrmU38Tuohg_xQTx0xcjq&dispatch=5885d80a13c0db1f8e263663d3faee8d14f86393d55a810282b64afed84968ec)\n\nCoffeeScript-Object-Notation Parser. Same as JSON but for CoffeeScript objects.\n\n\n## What is CSON?\n\nEveryone knows JSON, it's the thing that looks like this:\n\n``` javascript\n{\n\t\"abc\": [\n\t\t\"a\",\n\t\t\"b\",\n\t\t\"c\"\n\t],\n\t\"a\": {\n\t\t\"b\": \"c\"\n\t}\n}\n```\n\nBut with the invention of CoffeeScript you can also write the same thing in CSON which looks like this:\n\n``` coffeescript\n{\n\t# an array\n\tabc: [\n\t\t'a'\n\t\t'b'\n\t\t'c'\n\t]\n\n\t# an object\n\ta:\n\t\tb: 'c'\n}\n```\n\nWhich is far more lenient than JSON, nicer to write and read, you don't have to quote everything, you have comments, and won't fail if you forget a comma.\n\n\n\n## Installing\n\n\n1. [Install Node.js](https://github.com/balupton/node/wiki/Installing-Node.js)\n\n2. Install CSON\n\n\t``` bash\n\tnpm install cson\n\t```\n\n\n## Using CSON\n\n\n- With Node.js in JavaScript\n\n\t``` javascript\n\t// Include CSON\n\tCSON = require('cson');\n\n\t// Parse a file path\n\tCSON.parseFile('data.cson', function(err,obj){});  // async\n\tresult = CSON.parseFileSync('data.cson');  // sync\n\n\t// Parse a String\n\tCSON.parse(src, function(err,obj){});  // async\n\tresult = CSON.parseSync(src);  // sync\n\n\t// Stringify an object to CSON\n\tCSON.stringify(obj, function(err,str){});  // async\n\tresult = CSON.stringifySync(obj);  // sync\n\t```\n\n\n- With Node.js in CoffeeScript\n\n\t``` coffeescript\n\t# Include CSON\n\tCSON = require('cson')\n\n\t# Parse a file path\n\tCSON.parseFile 'data.cson', (err,obj) ->  # async\n\tresult = CSON.parseFile('data.cson')  # sync\n\n\t# Parse a string\n\tCSON.parse src, (err,obj) ->  # async\n\tresult = CSON.parseSync(src)  # sync\n\n\t# Stringify an object to CSON\n\tCSON.stringify data, (err,str) ->  # async\n\tresult = CSON.stringifySync(obj)  # sync\n\n\n- Via the command line (requires a global installation of CSON via `npm install -g cson`)\n\n\t``` bash\n\t# JSON file to CSON String\n\tjson2cson filePath > out.cson\n\n\t# CSON file to JSON String\n\tcson2json filePath > out.json\n\t```\n\n\n## History\n[You can discover the version history inside the `History.md` file](https://github.com/bevry/cson/blob/master/History.md#files)\n\n\n## License\nLicensed under the incredibly [permissive](http://en.wikipedia.org/wiki/Permissive_free_software_licence) [MIT License](http://creativecommons.org/licenses/MIT/)\n<br/>Copyright &copy; 2012+ [Bevry Pty Ltd](http://bevry.me)\n<br/>Copyright &copy; 2011 [Benjamin Lupton](http://balupton.com)\n",
  "readmeFilename": "README.md",
  "_id": "cson@1.4.4",
  "_from": "cson@~1.4.4"
}
